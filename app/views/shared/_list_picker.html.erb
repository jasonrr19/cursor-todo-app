<%# 
  ListPicker Component - Modal for selecting a list to add a movie to
  
  This component is rendered via JavaScript in minimal.html.erb
  The functionality is already implemented in the layout.
  This partial serves as documentation and can be used for server-side rendering if needed.
  
  JavaScript Usage:
    showListPicker(movieId)
  
  Features:
    - Displays user's lists
    - Shows list details (name, description, movie count, privacy)
    - Allows creating new list
    - Handles adding movie to selected list

  This component is currently JavaScript-rendered in minimal.html.erb %>
<%# See: minimal.html.erb - showListPicker(), displayListPicker(), createNewList() %>

<div id="list-picker-modal" class="modal-overlay" style="display: none;">
  <div class="modal-content">
    <div class="modal-header">
      <h2>Add to List</h2>
      <button type="button" class="modal-close" onclick="closeListPicker()" aria-label="Close">Ã—</button>
    </div>
    
    <div class="modal-body">
      <p class="modal-subtitle">Choose a list to add this movie to:</p>
      
      <div id="lists-container" class="lists-container">
        <%# Lists are dynamically loaded via JavaScript %>
      </div>
    </div>
    
    <div class="modal-footer">
      <button type="button" class="btn btn--ghost" onclick="closeListPicker()">
        Cancel
      </button>
      <button type="button" class="btn btn--primary" onclick="createNewList()">
        Create New List
      </button>
    </div>
  </div>
</div>

<style>
.modal-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.5);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1000;
  animation: fadeIn 0.2s ease;
}

@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

.modal-content {
  background: var(--card-background);
  border-radius: 12px;
  padding: 0;
  max-width: 500px;
  width: 90%;
  max-height: 80vh;
  overflow: hidden;
  box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.3);
  animation: slideUp 0.3s ease;
}

@keyframes slideUp {
  from {
    transform: translateY(20px);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

.modal-header {
  padding: 1.5rem;
  border-bottom: 1px solid var(--border-color);
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.modal-header h2 {
  margin: 0;
  font-size: 1.5rem;
  color: var(--text-primary);
}

.modal-close {
  background: none;
  border: none;
  font-size: 1.5rem;
  color: var(--text-secondary);
  cursor: pointer;
  width: 32px;
  height: 32px;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 4px;
  transition: all 0.2s;
}

.modal-close:hover {
  background: var(--background-secondary);
  color: var(--text-primary);
}

.modal-body {
  padding: 1.5rem;
  max-height: 50vh;
  overflow-y: auto;
}

.modal-subtitle {
  color: var(--text-secondary);
  margin-bottom: 1rem;
}

.modal-footer {
  padding: 1rem 1.5rem;
  border-top: 1px solid var(--border-color);
  display: flex;
  gap: 1rem;
  justify-content: flex-end;
}
</style>


