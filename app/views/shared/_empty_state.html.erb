<%# 
  Empty State Component
  Usage: <%= render 'shared/empty_state', 
              icon: 'ðŸŽ¬', 
              title: 'No movies found', 
              message: 'Try adjusting your filters',
              action_text: 'Browse All Movies',
              action_path: root_path 
%>

<div class="empty-state">
  <div class="empty-state-icon"><%= local_assigns[:icon] || 'ðŸ“­' %></div>
  <h3 class="empty-state-title"><%= local_assigns[:title] || 'Nothing here yet' %></h3>
  <p class="empty-state-message"><%= local_assigns[:message] || 'Get started by adding some content!' %></p>
  
  <% if local_assigns[:action_text] && local_assigns[:action_path] %>
    <%= link_to local_assigns[:action_path], class: "btn btn--empty-state-action" do %>
      <span class="btn-icon-large">âœ¨</span>
      <span class="btn-text-large"><%= local_assigns[:action_text] %></span>
      <span class="btn-arrow">â†’</span>
    <% end %>
  <% end %>
</div>

<style>
.empty-state {
  text-align: center;
  padding: 4rem 2rem;
  background: linear-gradient(135deg, rgba(0, 255, 255, 0.05) 0%, rgba(0, 200, 255, 0.05) 100%);
  border-radius: 20px;
  border: 2px dashed rgba(0, 255, 255, 0.3);
  margin: 2rem auto;
  max-width: 600px;
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
}

.empty-state-icon {
  font-size: 5rem;
  margin-bottom: 1.5rem;
  opacity: 0.8;
  animation: float 3s ease-in-out infinite;
}

@keyframes float {
  0%, 100% {
    transform: translateY(0px);
  }
  50% {
    transform: translateY(-15px);
  }
}

.empty-state-title {
  font-size: 2rem;
  margin-bottom: 1rem;
  color: var(--text-primary);
  font-weight: 700;
  background: linear-gradient(135deg, var(--accent-color) 0%, #00ccff 100%);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
}

.empty-state-message {
  color: var(--text-secondary);
  margin-bottom: 2.5rem;
  font-size: 1.15rem;
  line-height: 1.7;
}

.btn--empty-state-action {
  display: inline-flex;
  align-items: center;
  gap: 0.75rem;
  padding: 1.25rem 2.5rem;
  font-size: 1.1rem;
  font-weight: 700;
  background: linear-gradient(135deg, var(--accent-color) 0%, var(--accent-secondary) 100%);
  color: white;
  text-decoration: none;
  border-radius: 50px;
  box-shadow: 0 6px 25px rgba(0, 255, 255, 0.4);
  transition: all 0.3s ease;
  position: relative;
  overflow: hidden;
}

.btn--empty-state-action::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.3), transparent);
  transition: left 0.5s ease;
}

.btn--empty-state-action:hover::before {
  left: 100%;
}

.btn--empty-state-action:hover {
  transform: translateY(-3px) scale(1.05);
  box-shadow: 0 10px 35px rgba(0, 255, 255, 0.6);
}

.btn-icon-large {
  font-size: 1.5rem;
  animation: pulse 2s ease-in-out infinite;
}

@keyframes pulse {
  0%, 100% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.15);
  }
}

.btn-text-large {
  font-weight: 700;
  letter-spacing: 0.3px;
}

.btn-arrow {
  font-size: 1.5rem;
  transition: transform 0.3s ease;
}

.btn--empty-state-action:hover .btn-arrow {
  transform: translateX(5px);
}
</style>


