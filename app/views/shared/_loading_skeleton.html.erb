<%# 
  Loading Skeleton Component
  Usage: <%= render 'shared/loading_skeleton', type: 'movie', count: 3 %>
  Types: 'movie', 'list', 'review'
%>

<% 
  skeleton_type = local_assigns[:type] || 'movie'
  skeleton_count = local_assigns[:count] || 3
%>

<div class="loading-skeletons">
  <% skeleton_count.times do %>
    <% case skeleton_type %>
    <% when 'movie' %>
      <div class="skeleton-movie-card">
        <div class="skeleton skeleton-poster"></div>
        <div class="skeleton-movie-content">
          <div class="skeleton skeleton-title"></div>
          <div class="skeleton skeleton-subtitle"></div>
          <div class="skeleton skeleton-text"></div>
          <div class="skeleton skeleton-tags"></div>
        </div>
      </div>
    <% when 'list' %>
      <div class="skeleton-list-card">
        <div class="skeleton skeleton-list-header"></div>
        <div class="skeleton skeleton-text"></div>
        <div class="skeleton skeleton-text-short"></div>
      </div>
    <% when 'review' %>
      <div class="skeleton-review-card">
        <div class="skeleton-review-header">
          <div class="skeleton skeleton-avatar"></div>
          <div class="skeleton skeleton-title"></div>
        </div>
        <div class="skeleton skeleton-text"></div>
        <div class="skeleton skeleton-text"></div>
        <div class="skeleton skeleton-text-short"></div>
      </div>
    <% end %>
  <% end %>
</div>

<style>
.loading-skeletons {
  display: grid;
  gap: 2rem;
  margin: 2rem 0;
}

.skeleton {
  background: linear-gradient(
    90deg,
    var(--skeleton-base) 0%,
    var(--skeleton-highlight) 50%,
    var(--skeleton-base) 100%
  );
  background-size: 200% 100%;
  animation: skeleton-loading 1.5s ease-in-out infinite;
  border-radius: 8px;
}

@keyframes skeleton-loading {
  0% {
    background-position: 200% 0;
  }
  100% {
    background-position: -200% 0;
  }
}

/* Movie Card Skeleton */
.skeleton-movie-card {
  display: flex;
  gap: 1.5rem;
  padding: 1.5rem;
  background: var(--card-background);
  border-radius: 12px;
  border: 1px solid var(--border-color);
}

.skeleton-poster {
  width: 150px;
  height: 225px;
  flex-shrink: 0;
}

.skeleton-movie-content {
  flex: 1;
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.skeleton-title {
  height: 28px;
  width: 70%;
}

.skeleton-subtitle {
  height: 20px;
  width: 40%;
}

.skeleton-text {
  height: 16px;
  width: 100%;
}

.skeleton-text-short {
  height: 16px;
  width: 60%;
}

.skeleton-tags {
  height: 24px;
  width: 50%;
}

/* List Card Skeleton */
.skeleton-list-card {
  padding: 1.5rem;
  background: var(--card-background);
  border-radius: 12px;
  border: 1px solid var(--border-color);
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.skeleton-list-header {
  height: 32px;
  width: 60%;
}

/* Review Card Skeleton */
.skeleton-review-card {
  padding: 1.5rem;
  background: var(--card-background);
  border-radius: 12px;
  border: 1px solid var(--border-color);
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.skeleton-review-header {
  display: flex;
  gap: 1rem;
  align-items: center;
}

.skeleton-avatar {
  width: 48px;
  height: 48px;
  border-radius: 50%;
  flex-shrink: 0;
}

/* Theme-specific skeleton colors */
[data-theme="light"] {
  --skeleton-base: #e5e7eb;
  --skeleton-highlight: #f3f4f6;
}

[data-theme="dark"] {
  --skeleton-base: #2d2d2d;
  --skeleton-highlight: #3a3a3a;
}

@media (prefers-color-scheme: light) {
  html:not([data-theme="dark"]) {
    --skeleton-base: #e5e7eb;
    --skeleton-highlight: #f3f4f6;
  }
}

@media (prefers-color-scheme: dark) {
  html:not([data-theme="light"]) {
    --skeleton-base: #2d2d2d;
    --skeleton-highlight: #3a3a3a;
  }
}
</style>


